    Для выполнения домашнего задания были созданы отдельные классы.
    
    Задание 1.
    В классе ValidPhoneNumbers реализован метод validPhoneNumber(File file),
который считывает файл, ссылка на объект которого передается методу в качестве
аргумента, и выводит в консоль все валидные номера телефонов. Для тестирования
работы данного метода класс содержит также метод, записывающий в файл номера
телефонов, которые будут валидироваться. Данные с файла считываются построчно,
каждая считанная строка, которая по условию задачи содержит один номер, при этом
сравнивается с каждым из двух допустимых регулярных выражений, и выводится в консоль,
если проверка пройдена.

    Задание 2.
    В классе JsonCreator реализован метод writeToUserList(File file), который считывает
построчно с файла, который приходит в качестве аргумента, значения полей объктов типа
User. В методе создается списочный массив, в который добавляются объекты User по мере
заполнения полей считанными значениями. Также добавлен метод createJsonFile(String json),
создающий файл .json и записывающий в этот файл объекты User в JSON-формате. Для работы с
JSON использовалась библиотека Gson.

    Задание 3.
    В классе FrequencyWords реализован метод counterFrequencyWords(File file),
подсчитывающий частоту каждого слова в переданном методу файле. Сначала в методе
построчно считывается текст, для каждой строки создается массив строк, содержащий все
слова со сроки. Каждый элемент массива помещается в списочный массив listOfWords для
хранения всех считанных из текста слов и в множество setOfWords для хранения каждого слова без
дублирования. Далее проходимся по listOfWords, сравнивая каждое слово с образцом из
множества setOfWords, подсчитывая частоту каждого слова и записывая "значение + частоа" новый
результирующий списочный массив. Чтобы отсортировать список на частоте слов, использовался
статический метод sort класса Collections, методу был передан Comparator и переопределен метод
compare().

    В папке resourses содержатся текстовый файлы, используемые для записи и считывания
данных, а также файл user.json.  


   